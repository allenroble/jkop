/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is Node:

var namespaceURI protected as string
var localName protected as string
var prefix protected as string

func instance(name as string, value as string = null, nameSpace as string = null) static as this
{
	var v = new this()
	v.setNodeName(name)
	v.namespaceURI = nameSpace
	v.setNodeValue(value)
	return v
}

func getNamespaceURI as string:
	return namespaceURI

func getLocalName as string:
	return localName

func getPrefix as string:
	return prefix

func duplicate override as Node
{
	var v = new this()
	assert copyTo(v)
	return v
}

func copyTo(node as this) as bool
{
	assert base.copyTo(node)
	node.namespaceURI = namespaceURI
	node.localName = localName
	node.prefix = prefix
	return true
}

/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is HTMLElement:

var form as Form
var type as string
prop value as string
var textLength as int
prop defaultValue as string
prop placeholder as string
prop rows as int
prop cols as int
prop autofocus as bool
prop name as string
prop disabled as bool
prop maxLength as int
prop minLength as int
prop readOnly as bool
prop required as bool
prop selectionStart as int
prop selectionEnd as int
prop selectionDirection as string
var validity as ValidityState
var willValidate as bool
var validationMessage as string
prop wrap as string

ctor:
	setTagName("textarea")

func getForm as Form:
	return form

func getType as string:
	return type

func getTextLength as int:
	return textLength

func getWillValidate as bool:
	return willValidate

func getValidationMessage as string:
	return validationMessage

func setCustomValidity(str as string):
	validationMessage = str

func select stub
func setRangeText(replacement as string, start as int = 0, end as int = 0, selectMode as string) stub 
func setSelectionRange(selectionStart as int, selectionEnd as int, selectionDirection as string) stub
func checkValidity stub as bool
func reportValidity stub

func getValidity as ValidityState:
	return validity

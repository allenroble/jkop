/*
* This file is part of Jkop Mix
* Copyright (c) 2017 Job and Esther Technologies Oy
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

class is HTMLElement:

prop autocomplete as bool
prop autofocus as bool
prop disabled as bool
var form as Form
var labels as NodeList
var options as vector<Option>
prop selectedIndex as int
var selectedOptions as vector<Option>
var type as string

ctor:
	setTagName("select")

func add(item as Option, before as Option = null) stub
func checkValidity stub as bool
func item(index as int) stub as Option
func namedItem(name as string) stub as Option
func remove(index as int) stub
func setCustomValidity(str as string) stub

func getForm as Form:
	return form

func getLabels as NodeList:
	return labels

func getSelectedOptions as vector<Option>:
	return selectedOptions

func getType as string:
	return type

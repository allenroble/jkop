
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

var bubbles as bool
prop cancelBubble as bool
var cancelable as bool
var composed as bool
prop currentTarget as EventTarget
prop deepPath as Array
prop defaultPrevented as bool
prop eventPhase as int
prop returnValue as bool
prop target as EventTarget
prop timeStamp as long
prop type as string
prop isTrusted as bool

ctor(type as string, eventInt as map<string, bool> = null)
{
	this.type = type
	if eventInt {
		if Map.containsKey(eventInt, "bubbles") {
			bubbles = Map.get(eventInt, "bubbles")
		}
		if Map.containsKey(eventInt, "cancelable") {
			cancelable = Map.get(eventInt, "cancelable")
		}
		if Map.containsKey(eventInt, "composed") {
			composed = Map.get(eventInt, "composed")
		}
	}
}

func getBubbles as bool:
	return bubbles

func getCancelable as bool:
	return cancelable

func getComposed as bool:
	return composed

func composedPath stub as EventTarget
func initEvent(type as string, bubbles as bool, cancelable as bool) stub
func preventDefault stub
func stopImmediatePropagation stub
func stopPropagation stub
